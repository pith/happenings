[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "happenings"
dynamic = ["version"]
description = 'An app to create and search for events in your neighborhood'
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
  { name = "Pierre Thirouin", email = "pierre.thirouin@gmail.com" },
]

dependencies = [
  "fastapi==0.115.12",
  "uvicorn==0.33.0",
  "httpx==0.28.1",  # Required for TestClient
  "sqlalchemy==2.0.41",
  "pydantic_settings==2.9.1",
  "pydantic==2.11.5",
  "bcrypt==4.3.0",  # For secure password hashing
  "pyjwt==2.10.1",  # For JWT authentication
]

[project.scripts]
happenings = "happenings.cli:serve"

[project.urls]
Documentation = "https://github.com/pith/happenings#readme"
Issues = "https://github.com/pith/happenings/issues"
Source = "https://github.com/pith/happenings"

[tool.hatch.envs.default]
extra-dependencies = [
  "mypy>=1.15.0",
  "ruff>=0.11.12",
  "pytest>=8.0.0",
]

[tool.hatch.envs.default.scripts]
check = "mypy --install-types --non-interactive {args:src/happenings tests}"
lint = "ruff check ."
format = "ruff format ."
test = "pytest {args:tests}"

[tool.hatch.version]
path = "src/happenings/__about__.py"

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
# Enable pycodestyle (`E`), Pyflakes (`F`), and import sorting (`I`) codes
select = ["E", "F", "I"]
fixable = ["A", "B", "C", "D", "E", "F", "I"]
isort.known-first-party = ["happenings"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
