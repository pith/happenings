name: test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  run:
    name: Python ${{ matrix.python-version }} on Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12', '3.13']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Hatch
      run: pip install --upgrade hatch

    - name: Run static analysis
      run: hatch run check

    - name: Run Lint
      run: hatch run lint

    - name: Run tests
      run: hatch run test

    - name: Build Docker image
      run: docker build -t happenings:test .

    - name: Test Docker image
      run: |
        # Start the container in the background
        docker run -d --name happenings-test -p 8000:8000 happenings:test
        
        # Wait for the application to start
        sleep 30
        
        # Test that the application is responding
        curl -f http://localhost:8000/health || exit 1
        
        # Clean up
        docker stop happenings-test
        docker rm happenings-test
